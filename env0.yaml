version: 2

deploy:
  steps:
    setupVariables:
      after:
        # Adding kubernetes cluster configuration
        - mkdir -p ~/.kube
        - aws eks update-kubeconfig --name $cluster_name --region $region  
        #- cp acme-fitness.yaml ~/.kube/config
        - cat ~/.kube/config
        #- echo "$(sed 's/!!!NAMESPACE!!!/'"$NAMESPACE"'/g' namespace.yaml)" > namespace.yaml;
        #- cat namespace.yaml
        - name: trigger Jenkins
          run: |
            echo "Executing Jenkins pipeline"
            curl -X POST $JENKINS_URL/job/$JOB_NAME/build --user $jenkins_user:$jenkins_token

        - name: wait for Jenkins jobs to complete
          run: | 
            while true; do
              # Make a GET request to your Jenkins API and store the JSON response in a variable
              response=$(curl --user $jenkins_user:$jenkins_token -s "$JENKINS_URL/job/$JOB_NAME/lastBuild/api/json")

              # Extract the result field from the JSON response using jq (a command-line JSON processor)
              result=$(echo "$response" | jq -r '.result')
              echo "$result"

              # Check if the result is "true"
              if [ "$result" = "SUCCESS" ]; then
                echo "Result is TRUE, breaking out of loop"
                break
              else
                echo "Result is not True, sleeping for 5 seconds..."
                sleep 5
              fi
            done

    storeState:
      before:
        - name: Deployment refresh 
          run: |
            if kubectl rollout status deployment tweetapp-pepoc-test2 ; then
              kubectl rollout restart deployment tweetapp-pepoc-test2 
              kubectl rollout status deployment tweetapp-pepoc-test2 
              kubectl rollout restart deployment tweetapp-pepoc-test2 
              kubectl rollout status deployment tweetapp-pepoc-test2 
            else
              echo "Deployment not found so no restart needed."
            fi